func gerar_grid(tamanho)
    ? !tamanho 
        tamanho = 10
    var grid = []
    for i = 0..tamanho
        var linha = []
        for j = 0..tamanho
            var celula = rng % 2
            linha.Add(celula)
        grid.Add(linha)

func exibir_grid(grid)
    var full = "██"
    var empt = "  "
    for linha = 0..grid.Count()
        for celula = 0..linha.Count()
            ? celula = 1
                > `@celula * 2@,@linha@,@full@
            :
                > `@celula * 2@,@linha@,@empt@

func contar_vizinhos_vivos(grid, linha, coluna)
    var vizinhos = 0
    var linhas_totais = grid.Count()
    var colunas_totais = grid[0].Count()
    for i = -1..2
        for j = -1..2
            ? i = 0 & j = 0
                continue
            var linha_vizinha = linha + i
            var coluna_vizinha = coluna + j
            ? linhaVizinha >= 0 & linhaVizinha < linhasTotais & colunaVizinha >= 0 & colunaVizinha < colunasTotais
                vizinhos += grid[linha_vizinha][coluna_vizinha]
    return vizinhos

func executar_vida(grid)
    var tamanho = grid.Count()
    var novo_grid = []
    for i = 0..tamanho
        var linha = []
        for j = 0..tamanho
            linha.Add(0)
        novo_grid.Add(linha)
    for linha = 0..tamanho
        for coluna = 0..tamanho
            var vizinhos_vivos = contar_vizinhos_vivos(grid, linha, coluna)
            var estado_atual = grid[linha][coluna]
            ? estado_atual = 1 & (vizinhos_vivos < 2 | vizinhos_vivos > 3)
                novo_grid[linha][coluna] = 0
            :? estado_atual = 1 & (vizinhos_vivos = 2 | vizinhos_vivos = 3)
                novo_grid[linha][coluna] = 1
            :? estado_atual = 0 & vizinhos_vivos = 3
                novo_grid[linha][coluna] = 1
            :
                novo_grid[linha][coluna] = estado_atual
    return novo_grid

func jogar_vida(iteracoes, tamanho)
    ? !tamanho
        tamanho = 10
    var grid = gerar_grid(tamanho)
    for i = 0..iteracoes
        sleep(0.3)
        ? totaltime % 10 = 0 & totaltime > 100
            exibir_grid(grid)
        grid = executar_vida(grid)

jogar_vida(iteracoes=1000, tamanho=30)